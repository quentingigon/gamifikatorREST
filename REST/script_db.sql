DROP DATABASE IF EXISTS gamifikator;
CREATE OR REPLACE DATABASE gamifikator;
USE gamifikator;

CREATE TABLE USER
(
  email VARCHAR(50) NOT NULL,
  username VARCHAR(50) NOT NULL,
  password VARCHAR(100) NOT NULL,
  isAdmin BOOL NOT NULL,
  isSuspended BOOL NOT NULL,
  isPasswordValid BOOL NOT NULL,
  PRIMARY KEY (email)
);

CREATE TABLE ENDUSER
(
  id INT NOT NULL AUTO_INCREMENT,
  name VARCHAR(50) NOT NULL,
  apitoken VARCHAR(100) NOT NULL,
  PRIMARY KEY (id)
);

CREATE TABLE ENDUSERBADGES
(
  id INT NOT NULL AUTO_INCREMENT,
  userId INT NOT NULL,
  badgeId INT NOT NULL,
  PRIMARY KEY (id)
);

CREATE TABLE BADGE
(
  id INT NOT NULL AUTO_INCREMENT,
  name VARCHAR(50) NOT NULL,
  apitoken VARCHAR(100) NOT NULL,
  level INT NOT NULL,
  icon VARCHAR(50) NOT NULL,
  PRIMARY KEY (id)
);

CREATE TABLE RULE
(
  id INT NOT NULL AUTO_INCREMENT,
  ruleName VARCHAR(50) NOT NULL,
  apitoken VARCHAR(100) NOT NULL,
  conditionId INT NOT NULL,
  badgeId INT NOT NULL,
  PRIMARY KEY (id)
);

CREATE TABLE CONDITION
(
  id INT NOT NULL AUTO_INCREMENT,
  value VARCHAR(10) NOT NULL,
  operator VARCHAR(10) NOT NULL,
  ruleId VARCHAR(50) NOT NULL,
  PRIMARY KEY (id)
);

CREATE TABLE APPLICATION
(
  id INT NOT NULL AUTO_INCREMENT,
  ruleName VARCHAR(50) NOT NULL,
  creator VARCHAR(50) NOT NULL,
  owner_email VARCHAR(50) NOT NULL,
  description VARCHAR(400),
	apisecret VARCHAR(100) UNIQUE,
  apikey VARCHAR(100) UNIQUE,
  isDeployed BOOL NOT NULL,
  PRIMARY KEY (id),
	FOREIGN KEY (owner_email) REFERENCES USER(email)
);

CREATE TABLE APP_RULE
(
  id INT NOT NULL AUTO_INCREMENT,
  appId INT NOT NULL,
  ruleId INT NOT NULL,
  PRIMARY KEY (id)
);

CREATE TABLE APP_BADGE
(
  id INT NOT NULL AUTO_INCREMENT,
  appId INT NOT NULL,
  badgeId INT NOT NULL,
  PRIMARY KEY (id)
);

CREATE TABLE APP_ENDUSER
(
  id INT NOT NULL AUTO_INCREMENT,
  appId INT NOT NULL,
  enduserId INT NOT NULL,
  PRIMARY KEY (id)
);